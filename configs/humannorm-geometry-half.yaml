name: "humannorm-geometry"
tag: "${rmspace:${system.prompt_processor.prompt},_}"
exp_root_dir: "outputs"
seed: 0

data_type: "random-camera-datamodule"
data:
  batch_size: 1
  width: 512
  height: 512
  camera_distance_range: [3, 4]
  fovy_range: [40, 45]
  elevation_range: [-5, 10]
  azimuth_range: [-180, 180]
  camera_perturb: 0.
  center_perturb: 0.
  up_perturb: 0.
  eval_camera_distance: 3
  eval_fovy_deg: 45.
  eval_elevation_deg: 5.
  n_val_views: 120
  sampling_type: "half_body"

system_type: "humannorm-system"
system:
  # start_sdf_loss_step: 3000
  geometry_type: "implicit-sdf"
  geometry:
    radius: 1
    n_feature_dims: 0
    isosurface_resolution: 256
    isosurface_deformable_grid: false
    isosurface_coarse_to_fine: false
    use_sdf_loss: false
    # start_sdf_loss_step: ${system.start_sdf_loss_step}
    # progressive_resolution_steps: [3000, 6000] # use progressive resolution
    pos_encoding_config:
      otype: HashGrid
      n_levels: 16
      n_features_per_level: 2
      log2_hashmap_size: 19
      base_resolution: 16
      per_level_scale: 1.381912879967776 # max resolution 2048
      start_level: 8 # resolution ~200
      # start_step: 500
      # update_steps: 500

    # initialize SDF using a guide mesh
    shape_init: mesh:./load/shapes/half_body.obj
    shape_init_params: 0.9
    shape_init_mesh_up: +y
    shape_init_mesh_front: +z

  material_type: "no-material" # unused
  material:
    n_output_dims: 0

  background_type: "solid-color-background" # unused

  renderer_type: "nvdiff-rasterizer"
  renderer:
    use_sdf_loss: ${system.geometry.use_sdf_loss}
    context_type: cuda
    normal_type: 'camera'

  prompt_processor_type: "stable-diffusion-prompt-processor"
  prompt_processor:
    pretrained_model_name_or_path: "./pretrained_models/normal-adapted-sd1.5"
    prompt: ???
    front_threshold: 45.
    back_threshold: 45.
    human_part_prompt: false

  prompt_processor_type_add: "stable-diffusion-prompt-processor"
  prompt_processor_add:
    pretrained_model_name_or_path: "./pretrained_models/depth-adapted-sd1.5"
    prompt: ???
    front_threshold: 45.
    back_threshold: 45.
    human_part_prompt: false

  guidance_type: "sds-du-guidance" # normal sds
  guidance:
    pretrained_model_name_or_path: "./pretrained_models/normal-adapted-sd1.5"
    use_sds: true
    guidance_scale: 50 # diversity
    min_step_percent: [5000, 0.02, 0.02, 8001] # growing
    max_step_percent: [5000, 0.8, 0.21, 8001] # growing
    per_editing_step: -1 # unused

  guidance_type_add: "sds-du-guidance" # depth sds
  guidance_add:
    pretrained_model_name_or_path: "./pretrained_models/depth-adapted-sd1.5"
    use_sds: true
    guidance_scale: 50 # diversity
    min_step_percent: [5000, 0.02, 0.02, 8001] # growing
    max_step_percent: [5000, 0.51, 0.11, 8001] # growing
    per_editing_step: -1 # unused

  loggers:
    wandb:
      enable: false
      project: 'threestudio'
      name: None

  loss:
    lambda_sds: 1.
    lambda_sds_add: [5000, 1., 0, 5001] 
    lambda_sdf: 1500
    lambda_normal_consistency: 0
    lambda_laplacian_smoothness: [5000, 0., 1000, 5001] 


  optimizer:
    name: AdamW
    args:
      lr: 0.00003
      betas: [0.9, 0.99]
      eps: 1.e-15

trainer:
  max_steps: 12000
  log_every_n_steps: 1
  num_sanity_val_steps: 1
  val_check_interval: 1000
  enable_progress_bar: true
  precision: 32

checkpoint:
  save_last: true # save at each validation time
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}
  # every_n_train_steps: 100
